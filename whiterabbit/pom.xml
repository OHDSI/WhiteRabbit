<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>leporidae</artifactId>
        <groupId>org.ohdsi</groupId>
        <version>1.0.0</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>whiterabbit</artifactId>
    <name>WhiteRabbit</name>
    <packaging>jar</packaging>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>appassembler-maven-plugin</artifactId>
                <configuration>
                    <assembleDirectory>${project.parent.basedir}/dist</assembleDirectory>
                    <extraJvmArguments>-Xmx1200m</extraJvmArguments>
                    <programs>
                        <program>
                            <mainClass>org.ohdsi.whiterabbit.WhiteRabbitMain</mainClass>
                            <id>whiteRabbit</id>
                        </program>
                    </programs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <!-- version>3.2.2</version -->
                <configuration>
                    <forkCount>1</forkCount>
                    <reuseForks>false</reuseForks>
                    <skipTests>${skipUnitTests}</skipTests>
                    <systemPropertyVariables>
                        <java.awt.headless>false</java.awt.headless>
                        <awt.toolkit>com.github.caciocavallosilano.cacio.ctc.CTCToolkit</awt.toolkit>
                        <java.awt.graphicsenv>com.github.caciocavallosilano.cacio.ctc.CTCGraphicsEnvironment</java.awt.graphicsenv>
                    </systemPropertyVariables>
                    <argLine>
                        -Doracle.jdbc.timezoneAsRegion=false
                        -XX:+EnableDynamicAgentLoading
                        <!-- Line(s) below are needed to keep TestSourceDataScan.updateEnv() working in java 17+
                             This is considered an acceptable hack since it only affects test code -->
                        --add-exports=java.base/java.util=ALL-UNNAMED
                        --add-opens=java.base/java.util=ALL-UNNAMED
                        <!-- suppress exceptions from cacio-tta, see https://github.com/CaciocavalloSilano/caciocavallo -->
                        --add-opens java.base/java.lang.reflect=ALL-UNNAMED
                        --add-exports java.base/java.lang.reflect=ALL-UNNAMED
                        --add-exports=java.desktop/java.awt=ALL-UNNAMED
                        --add-exports=java.desktop/java.awt.peer=ALL-UNNAMED
                        --add-exports=java.desktop/sun.awt.image=ALL-UNNAMED
                        --add-exports=java.desktop/sun.java2d=ALL-UNNAMED
                        --add-exports=java.desktop/java.awt.dnd.peer=ALL-UNNAMED
                        --add-exports=java.desktop/sun.awt=ALL-UNNAMED
                        --add-exports=java.desktop/sun.awt.event=ALL-UNNAMED
                        --add-exports=java.desktop/sun.awt.datatransfer=ALL-UNNAMED
                        --add-exports=java.base/sun.security.action=ALL-UNNAMED
                        --add-opens=java.base/java.util=ALL-UNNAMED
                        --add-opens=java.desktop/java.awt=ALL-UNNAMED
                        --add-opens=java.desktop/sun.java2d=ALL-UNNAMED
                        --add-opens=java.base/java.lang.reflect=ALL-UNNAMED
                        --add-opens java.base/java.lang=ALL-UNNAMED
                    </argLine>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
		<version>3.2.2</version>
                <configuration>
                    <systemPropertyVariables>
                        <propertyName>propertyValue</propertyName>
                        <projectBuildDirectory>${project.build.directory}</projectBuildDirectory>
                        <java.awt.headless>false</java.awt.headless>
                    </systemPropertyVariables>
                    <forkCount>1</forkCount>
                    <reuseForks>false</reuseForks>
                    <includes>
                        <include>**/*IT.java</include>
                    </includes>
                    <skipTests>${skipIntegrationTests}</skipTests>
                    <argLine>
                        -XX:+EnableDynamicAgentLoading
                    <!-- experimental workaround for Snowflake JDBC issue,
                         see https://community.snowflake.com/s/article/JDBC-Driver-Compatibility-Issue-With-JDK-16-and-Later -->
                    --add-opens java.base/java.nio=ALL-UNNAMED
                        <!-- suppress exceptions from cacio-tta, see https://github.com/CaciocavalloSilano/caciocavallo -->
                        --add-opens java.base/java.lang.reflect=ALL-UNNAMED
                        --add-exports java.base/java.lang.reflect=ALL-UNNAMED
                        --add-exports=java.desktop/java.awt=ALL-UNNAMED
                        --add-exports=java.desktop/java.awt.peer=ALL-UNNAMED
                        --add-exports=java.desktop/sun.awt.image=ALL-UNNAMED
                        --add-exports=java.desktop/sun.java2d=ALL-UNNAMED
                        --add-exports=java.desktop/java.awt.dnd.peer=ALL-UNNAMED
                        --add-exports=java.desktop/sun.awt=ALL-UNNAMED
                        --add-exports=java.desktop/sun.awt.event=ALL-UNNAMED
                        --add-exports=java.desktop/sun.awt.datatransfer=ALL-UNNAMED
                        --add-exports=java.base/sun.security.action=ALL-UNNAMED
                        --add-opens=java.base/java.util=ALL-UNNAMED
                        --add-opens=java.desktop/java.awt=ALL-UNNAMED
                        --add-opens=java.desktop/sun.java2d=ALL-UNNAMED
                        --add-opens=java.base/java.lang.reflect=ALL-UNNAMED
                        --add-opens java.base/java.lang=ALL-UNNAMED
                    </argLine>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- unpack the examples zip so that the contents can be used as test resources -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
		<version>3.1.0</version>
                <executions>
                    <execution>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <unzip src="${project.basedir}/../examples.zip" dest="${basedir}/target/test-classes" overwrite="true"/>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- enforce that the used dependencies support Java 1.8 -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>3.4.1</version>
                <executions>
                    <execution>
                        <id>enforce-max-java-version</id>
                        <phase>verify</phase>
                        <goals><goal>enforce</goal></goals>
                        <configuration>
                            <rules>
                                <enforceBytecodeVersion>
                                    <maxJdkVersion>${org.ohdsi.whiterabbit.maxjdkversion}</maxJdkVersion>
                                    <ignoredScopes>test</ignoredScopes>
                                </enforceBytecodeVersion>
                            </rules>
                            <fail>true</fail>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>extra-enforcer-rules</artifactId>
                        <version>1.7.0</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
        <testResources>
            <testResource>
                <directory>${project.basedir}/src/test/resources</directory>
            </testResource>
        </testResources>
    </build>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>testcontainers-bom</artifactId>
                <version>1.19.4</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>2.15.1</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.ohdsi</groupId>
            <artifactId>rabbit-core</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>1.7.36</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.15.1</version>
        </dependency>


        <!-- https://mvnrepository.com/artifact/org.testcontainers/testcontainers -->
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>testcontainers</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-annotations</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>5.10.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>5.10.1</version>
            <scope>test</scope>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.testcontainers/junit-jupiter -->
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>postgresql</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>mysql</artifactId>
            <!-- version>1.19.3</version -->
            <scope>test</scope>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.testcontainers/oracle-xe -->
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>oracle-xe</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>mssqlserver</artifactId>
            <version>1.19.7</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.ohdsi</groupId>
            <artifactId>rabbit-core</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>one.util</groupId>
            <artifactId>streamex</artifactId>
            <version>0.8.2</version>
        </dependency>

        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml-lite</artifactId>
            <version>5.2.5</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.github.caciocavallosilano</groupId>
            <artifactId>cacio-tta</artifactId>
            <version>1.18</version>
            <scope>test</scope>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.assertj/assertj-swing-junit -->
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-swing-junit</artifactId>
            <version>3.17.1</version>
            <scope>test</scope>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.assertj/assertj-swing -->
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-swing</artifactId>
            <version>3.17.1</version>
            <scope>test</scope>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>2.21.1</version>
        </dependency>
    </dependencies>
</project>
