<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                      http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.ohdsi</groupId>
    <artifactId>leporidae</artifactId>
    <packaging>pom</packaging>
    <version>1.0.0</version>
    <modules>
        <module>rabbitinahat</module>
        <module>whiterabbit</module>
        <module>rabbit-core</module>
    </modules>
    <name>Leporidae</name>
    <url>https://www.ohdsi.org/analytic-tools/whiterabbit-for-etl-design/</url>

    <organization>
        <name>OHDSI</name>
        <url>https://www.ohdsi.org</url>
    </organization>

    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
        </license>
    </licenses>

    <repositories>
        <repository>
            <id>central</id>
            <name>Central Repository</name>
            <url>https://repo.maven.apache.org/maven2</url>
            <layout>default</layout>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>clojars</id>
            <name>Clojars Repository</name>
            <url>https://clojars.org/repo/</url>
            <layout>default</layout>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>icm</id>
            <name>ICM Repository</name>
            <url>https://maven.ceon.pl/artifactory/</url>
            <layout>default</layout>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>mulesoft</id>
            <name>Mulesoft Repository</name>
            <url>https://repository.mulesoft.org/nexus/content/repositories/public/</url>
            <layout>default</layout>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>local-maven-repo</id>
            <name>Local Repository</name>
            <layout>default</layout>
            <url>file:///${project.basedir}/../lib</url>
        </repository>
        <repository>
            <id>jitpack.io</id>
            <url>https://jitpack.io</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>central</id>
            <name>Central Repository</name>
            <url>https://repo.maven.apache.org/maven2</url>
            <layout>default</layout>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <releases>
                <updatePolicy>never</updatePolicy>
            </releases>
        </pluginRepository>
    </pluginRepositories>

    <properties>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <maven.compiler.release>8</maven.compiler.release>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <skipTests>false</skipTests>
        <skipUnitTests>${skipTests}</skipUnitTests>
        <skipIntegrationTests>${skipTests}</skipIntegrationTests>
        <org.ohdsi.whiterabbit.maxjdkversion>1.8</org.ohdsi.whiterabbit.maxjdkversion>
    </properties>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>appassembler-maven-plugin</artifactId>
                    <version>1.10</version>
                    <configuration>
                        <programs>
                        </programs>
                        <repositoryLayout>flat</repositoryLayout>
                        <useWildcardClassPath>true</useWildcardClassPath>
                    </configuration>
                    <executions>
                        <execution>
                            <id>jar:jar</id>
                            <goals>
                                <goal>assemble</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>3.1.2</version>
                    <configuration>
                        <skipTests>${skipUnitTests}</skipTests>
                        <forkCount>1</forkCount>
                        <reuseForks>false</reuseForks>
                        <systemPropertyVariables>
                            <java.awt.headless>false</java.awt.headless>
                            <awt.toolkit>com.github.caciocavallosilano.cacio.ctc.CTCToolkit</awt.toolkit>
                            <java.awt.graphicsenv>com.github.caciocavallosilano.cacio.ctc.CTCGraphicsEnvironment</java.awt.graphicsenv>
                        </systemPropertyVariables>
                        <argLine>
                            -Doracle.jdbc.timezoneAsRegion=false
                            <!-- Line(s) below are needed to keep TestSourceDataScan.updateEnv() working in java 17+
                                 This is considered an acceptable hack since it only affects test code -->
                            --add-exports=java.base/java.util=ALL-UNNAMED
                            --add-opens=java.base/java.util=ALL-UNNAMED
                            <!-- suppress exceptions from cacio-tta, see https://github.com/CaciocavalloSilano/caciocavallo -->
                            --add-opens java.base/java.lang.reflect=ALL-UNNAMED
                            --add-exports java.base/java.lang.reflect=ALL-UNNAMED
                            --add-exports=java.desktop/java.awt=ALL-UNNAMED
                            --add-exports=java.desktop/java.awt.peer=ALL-UNNAMED
                            --add-exports=java.desktop/sun.awt.image=ALL-UNNAMED
                            --add-exports=java.desktop/sun.java2d=ALL-UNNAMED
                            --add-exports=java.desktop/java.awt.dnd.peer=ALL-UNNAMED
                            --add-exports=java.desktop/sun.awt=ALL-UNNAMED
                            --add-exports=java.desktop/sun.awt.event=ALL-UNNAMED
                            --add-exports=java.desktop/sun.awt.datatransfer=ALL-UNNAMED
                            --add-exports=java.base/sun.security.action=ALL-UNNAMED
                            --add-opens=java.base/java.util=ALL-UNNAMED
                            --add-opens=java.desktop/java.awt=ALL-UNNAMED
                            --add-opens=java.desktop/sun.java2d=ALL-UNNAMED
                            --add-opens=java.base/java.lang.reflect=ALL-UNNAMED
                            --add-opens java.base/java.lang=ALL-UNNAMED
                        </argLine>

                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>org.junit.jupiter</groupId>
                            <artifactId>junit-jupiter</artifactId>
                            <version>5.8.2</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <configuration>
                        <includes>
                            <include>**/*IT.java</include>
                        </includes>
                        <skipTests>${skipIntegrationTests}</skipTests>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>integration-test</goal>
                                <goal>verify</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.honton.chas</groupId>
                    <artifactId>license-maven-plugin</artifactId>
                    <version>0.0.3</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.3.1</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>3.3.1</version>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>dist</directory>
                            <includes>
                                <include>**</include>
                            </includes>
                            <followSymlinks>false</followSymlinks>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>3.7.1</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>3.0.0</version>
            </plugin>
            <plugin>
                <!--
                  While the source and target Java version are still 1.8, Java 17+ is required to be able to use
                  recent versions of test and verification tools. This plugin enforces the required Java version,
                  and gives a cleaner error message than failing on a dependency that is not compatible with an
                  older version of Java.
                  -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>3.4.1</version>
                <executions>
                    <execution>
                        <id>enforce-java</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireJavaVersion>
                                    <version>[17,22)</version>
                                </requireJavaVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.honton.chas</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>0.0.3</version>
                <configuration>
                    <acceptableLicenses>
                        <license>
                            <name>Oracle Free Use Terms and Conditions \(FUTC\)</name>
                        </license>
                        <license>
                            <name>The GNU General Public License, v2 with Universal FOSS Exception, v1.0</name>
                        </license>
                        <license>
                            <name>Plexus</name>
                            <url>https://github.com/dom4j/dom4j/blob/master/LICENSE</url>
                        </license>
                        <license>
                            <name>(The )?Apache( )?(Software )?(License)?(,)? (Version )?(2.0|v2)</name>
                            <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
                        </license>
                        <license>
                            <name>BSD-2-Clause</name>
                            <url>https://jdbc.postgresql.org/about/license.html</url>
                        </license>
                        <license>
                            <name>HSQLDB License, a BSD open source license</name>
                            <url>https://hsqldb.org/web/hsqlLicense.html</url>
                        </license>
                        <license>
                            <name>MIT License</name>
                            <url>https://www.opensource.org/licenses/mit-license.php</url>
                        </license>
                        <license>
                            <name>MIT</name>
                            <url>https://opensource.org/licenses/MIT</url>
                        </license>
                        <license>
                            <name>Eclipse Public License 1.0</name>
                            <url>https://www.eclipse.org/legal/epl-v10.html</url>
                        </license>
                        <license>
                            <name>Eclipse Public License v2.0</name>
                            <url>https://www.eclipse.org/legal/epl-v20.html</url>
                        </license>
                        <license>
                            <name>GPL2 with classpath exception</name>
                            <url>https://openjdk.java.net/legal/gplv2+ce.html</url>
                        </license>
                        <license>
                            <name>Teradata Generic Download License</name>
                            <url>https://downloads.teradata.com/download/license/generic-download-license</url>
                        </license>
                    </acceptableLicenses>
                    <excludes>
                        <!-- apparently there is no license information available for sqljdbc4, even though
                        it is published on Maven repos -->
                        <exclude>com.microsoft.sqlserver:sqljdbc4</exclude>
                    </excludes>
                    <!-- acceptableLicenseResources>osi-widely-used</acceptableLicenseResources -->
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>compliance</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.github.ferstl</groupId>
                <artifactId>depgraph-maven-plugin</artifactId>
                <version>4.0.2</version>
                <!-- configuration>
                    ...
                </configuration -->
            </plugin>
        </plugins>

        <resources>
            <!-- Resource filtering to make version information available. From https://stackoverflow.com/a/26573884 -->
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
    </build>
</project>
